"""Adds reminders table and neccessary relationships

Revision ID: 80bcba1462de
Revises: 16bb007f34e0
Create Date: 2024-12-23 15:43:16.281613

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '80bcba1462de'
down_revision: Union[str, None] = '16bb007f34e0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('reminders',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('assignor_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('due_date', sa.DateTime(), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('recurring', sa.Boolean(), nullable=True),
    sa.Column('recurrence_type', sa.String(length=50), nullable=True),
    sa.Column('recurrence_end', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['assignor_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('acknowledgements',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('reminder_id', sa.Integer(), nullable=True),
    sa.Column('assignee_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['assignee_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['reminder_id'], ['reminders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_reminders',
    sa.Column('reminder_id', sa.Integer(), nullable=True),
    sa.Column('assignee_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['assignee_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['reminder_id'], ['reminders.id'], )
    )
    op.add_column('actions', sa.Column('reminder_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'actions', 'reminders', ['reminder_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'actions', type_='foreignkey')
    op.drop_column('actions', 'reminder_id')
    op.drop_table('user_reminders')
    op.drop_table('acknowledgements')
    op.drop_table('reminders')
    # ### end Alembic commands ###
